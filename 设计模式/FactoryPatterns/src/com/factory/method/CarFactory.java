/*
 * @Description：工厂方法：将简单工厂方法中工厂的业务逻辑抽取出来，创建一个工厂的接口，需求具体产品时用具体产品工厂类去实现这个接口；
 *              这样满足<开闭原则>，使其容易扩展，添加不同的产品仅需要创建一个相应的类实现这个接口即可；
 *              △工厂方法每遇到一个产品，都会创建一个产品类和一个具体的子工厂，且每个子工厂生产的产品过于单一；
 *               当产品种类增多时代码量会增加。
 *               
 *    [△注意：工厂方法模式和简单工厂模式生产的都是一种产品，即同一等级的产品；如这里都为轿车，而车可以有很多种类型(卡车、汽车、三轮车等)，这时候就要用抽象工厂模式]
 *               
 */
package com.factory.method;

//工厂接口(抽象)
public interface CarFactory {
	
	//生产轿车；可能有宝马、奥迪、大众等
	public Car produceCar();
}
